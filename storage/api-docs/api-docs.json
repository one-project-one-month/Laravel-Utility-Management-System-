{
    "openapi": "3.0.0",
    "info": {
        "title": "Utility Management System API",
        "description": "API documentation for the Laravel Utility Management System",
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login user and return tokens",
                "description": "Authenticate a user and receive an access token and a refresh token.",
                "operationId": "97d0fa1f733dead1980e640104204374",
                "requestBody": {
                    "description": "User credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "johndoe@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "Ks82787294"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Login success"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "format": "email",
                                                            "example": "johndoe@gmail.com"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "accessToken": {
                                                    "type": "string",
                                                    "example": "1|aBcDeFgHiJkLmNoPqRsTuVwXyZ123456"
                                                },
                                                "note": {
                                                    "type": "string",
                                                    "example": "The refresh token is stored in an httpOnly cookie named 'refreshToken'."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - invalid password"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                }
            }
        },
        "/api/v1/auth/refresh": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh the access token",
                "description": "Uses a refresh token stored in an httpOnly cookie to generate a new access token.",
                "operationId": "18eda0c146bbb7b84dd85353173dd930",
                "parameters": [
                    {
                        "name": "refreshToken",
                        "in": "cookie",
                        "description": "Refresh token cookie",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "successful"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "format": "email",
                                                            "example": "johndoe@gmail.com"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "accessToken": {
                                                    "type": "string",
                                                    "example": "2|zYxWvUtSrQpOnMlKjIhGfEdCbA123456"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or expired refresh token"
                    },
                    "422": {
                        "description": "Validation error - refresh_token is required"
                    }
                }
            }
        },
        "/api/v1/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user",
                "description": "Logs out the current authenticated user by invalidating their token.",
                "operationId": "cf53777b1786575f52eb3cfd965c15a0",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tenants/{id}/bills/latest": {
            "get": {
                "tags": [
                    "Client Bills"
                ],
                "summary": "Get the latest bill for a tenant",
                "description": "Retrieves the most recent bill for a specific tenant based on the user ID.",
                "operationId": "0c7ab670d18b048b572e032f32b16695",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The User UUID of the tenant",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "latestBill Success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/BillResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Bill not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tenants/{id}/bills/history": {
            "get": {
                "tags": [
                    "Client Bills"
                ],
                "summary": "Get the bill history for a tenant",
                "description": "Retrieves the bill history for the current year for a specific tenant.",
                "operationId": "2a2066d53208407a8e0f348b3273ff50",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The User UUID of the tenant",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "billHistory Success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BillResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tenants/{id}/contracts": {
            "get": {
                "tags": [
                    "Client Contracts"
                ],
                "summary": "Get contract details for a tenant",
                "description": "Retrieves the contract details associated with a specific tenant.",
                "operationId": "b1629a9c69e2e8f46556f52340917a6e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the tenant",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contract retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Contract retrieved successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ClientContractResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Contract not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/tenants/{tenantId}/customer-services/create": {
            "post": {
                "tags": [
                    "Client Customer Service"
                ],
                "summary": "Create a customer service request",
                "description": "Allows a tenant to create a new customer service request (e.g., complain, maintenance).",
                "operationId": "9580d2eedfbe3fa3b008c6281e7185d7",
                "parameters": [
                    {
                        "name": "tenantId",
                        "in": "path",
                        "description": "The ID of the tenant making the request",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "roomId",
                                    "category",
                                    "description",
                                    "status",
                                    "priorityLevel",
                                    "issuedDate"
                                ],
                                "properties": {
                                    "roomId": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "9a7c6f2c-5b8a-4f2a-8f2c-6d8b3a0c1e9f"
                                    },
                                    "category": {
                                        "type": "string",
                                        "enum": [
                                            "Complain",
                                            "Maintenance",
                                            "Other"
                                        ],
                                        "example": "Maintenance"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "The kitchen sink is leaking."
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "Pending",
                                            "Ongoing",
                                            "Resolved"
                                        ],
                                        "example": "Pending"
                                    },
                                    "priorityLevel": {
                                        "type": "string",
                                        "enum": [
                                            "Low",
                                            "Medium",
                                            "High"
                                        ],
                                        "example": "Medium"
                                    },
                                    "issuedDate": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-10-05"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Customer service request created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Customer Service created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CustomerServiceResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/tenants/{id}/customer-services/history/{status?}": {
            "get": {
                "tags": [
                    "Client Customer Service"
                ],
                "summary": "Get customer service history for a tenant",
                "description": "Retrieves a list of customer service requests for a specific tenant, optionally filtered by status.",
                "operationId": "2e662b6e51cacbeef946f9ffc39fea0b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the tenant (or room ID associated with the tenant) to retrieve history for",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "status",
                        "in": "path",
                        "description": "Filter by status (e.g., Pending, Resolved)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Pending",
                                "Ongoing",
                                "Resolved"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Customer Service History"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CustomerServiceResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tenants/{id}/invoices/latest": {
            "get": {
                "tags": [
                    "Client Invoices"
                ],
                "summary": "Get the latest invoice for a tenant",
                "description": "Retrieves the most recent invoice for a specific tenant.",
                "operationId": "b3969d0b322d9e03257285034eeb3556",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the tenant",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Latest invoice retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Latest invoice retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/InvoiceResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tenant or Invoice not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tenants/{id}/invoices/history": {
            "get": {
                "tags": [
                    "Client Invoices"
                ],
                "summary": "Get invoice history for a tenant",
                "description": "Retrieves the invoice history (excluding the current month) for a specific tenant.",
                "operationId": "45aa5aa162866c355c83388a2d1b5304",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the tenant",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invoice history retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invoice history retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/InvoiceResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tenant not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tenants/{id}/receipts/latest": {
            "get": {
                "tags": [
                    "Client Receipts"
                ],
                "summary": "Get the latest receipt for a tenant",
                "description": "Retrieves the most recent receipt for a specific tenant.",
                "operationId": "f49c6009eca837644400c2e855422b88",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the tenant",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Receipt retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Receipt retrieved successful"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ClientReceiptResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tenant or Receipt not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/bills": {
            "get": {
                "tags": [
                    "Bills"
                ],
                "summary": "Get a list of bills",
                "description": "Returns a paginated list of all bills.",
                "operationId": "af349e3711a8159a3d904160063053d5",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bills retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/BillResource"
                                                    }
                                                },
                                                "pagination": {
                                                    "properties": {
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 50
                                                        },
                                                        "per_page": {
                                                            "type": "integer",
                                                            "example": 15
                                                        },
                                                        "current_page": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "last_page": {
                                                            "type": "integer",
                                                            "example": 4
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Bills not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Bills"
                ],
                "summary": "Generate monthly bills",
                "description": "Triggers a job to generate monthly bills for all applicable tenants.",
                "operationId": "3f86f90282742f48df2e8ec359f7898d",
                "responses": {
                    "201": {
                        "description": "Bill generation process started successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Monthly bill created successfully. Auto-calculates units and generates invoice. Email feature coming next."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/bills/{id}": {
            "get": {
                "tags": [
                    "Bills"
                ],
                "summary": "Get a single bill",
                "description": "Returns the details of a specific bill by its ID.",
                "operationId": "d32a8a64e701bc14dafa25a842eaf2e2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the bill",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bill retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BillResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Bill not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/contracts": {
            "get": {
                "tags": [
                    "Contracts"
                ],
                "summary": "Get a list of contracts",
                "description": "Returns a paginated list of all contracts.",
                "operationId": "105304bf8dfd0ac02c4dc114a6c7144b",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Contracts retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/ContractResource"
                                                    }
                                                },
                                                "pagination": {
                                                    "properties": {
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 50
                                                        },
                                                        "per_page": {
                                                            "type": "integer",
                                                            "example": 15
                                                        },
                                                        "current_page": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "last_page": {
                                                            "type": "integer",
                                                            "example": 4
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Contracts not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Contracts"
                ],
                "summary": "Create a new contract",
                "description": "Creates a new contract and assigns a tenant to a room.",
                "operationId": "7dca7a1e54ece1d0144fcdc4bea3ac24",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "roomNo",
                                    "contractId",
                                    "tenantId",
                                    "createdDate",
                                    "expiryDate"
                                ],
                                "properties": {
                                    "roomNo": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "9a7c6f2c-5b8a-4f2a-8f2c-6d8b3a0c1e9f"
                                    },
                                    "contractId": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "tenantId": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "createdDate": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-10-27"
                                    },
                                    "expiryDate": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-10-26"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Contract created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContractResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Room is not available"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/contracts/{id}": {
            "get": {
                "tags": [
                    "Contracts"
                ],
                "summary": "Get a single contract",
                "description": "Returns the details of a specific contract by its ID.",
                "operationId": "4a1a977464745a120b4e62995e9467f8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the contract",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContractResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Contract not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Contracts"
                ],
                "summary": "Update an existing contract",
                "description": "Updates the details of an existing contract.",
                "operationId": "6405d170407b8b189b5b4bbe1568d455",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the contract to update",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "roomNo",
                                    "contractId",
                                    "tenantId",
                                    "createdDate",
                                    "expiryDate"
                                ],
                                "properties": {
                                    "roomNo": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "e1e2d736-3813-43be-8f1f-1b734cffb327"
                                    },
                                    "contractId": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "tenantId": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "createdDate": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-10-5"
                                    },
                                    "expiryDate": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-10-6"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Contract updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContractResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Contract not found"
                    },
                    "409": {
                        "description": "Room is not available"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/contract-types": {
            "get": {
                "tags": [
                    "Contract Types"
                ],
                "summary": "Get a list of contract types",
                "description": "Returns a paginated list of all contract types.",
                "operationId": "6e708fadf1798f6e1273513f0990a4f5",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Contract types retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/ContractTypeResource"
                                                    }
                                                },
                                                "pagination": {
                                                    "properties": {
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 50
                                                        },
                                                        "per_page": {
                                                            "type": "integer",
                                                            "example": 15
                                                        },
                                                        "current_page": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "last_page": {
                                                            "type": "integer",
                                                            "example": 4
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Contract types not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Contract Types"
                ],
                "summary": "Create a new contract type",
                "description": "Creates a new contract type with specified details.",
                "operationId": "5ac1d661682fd5931d5444d144dc70e7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "duration",
                                    "price",
                                    "facilities"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Standard 1-Year"
                                    },
                                    "duration": {
                                        "description": "Duration in months",
                                        "type": "integer",
                                        "example": 12
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 550
                                    },
                                    "facilities": {
                                        "description": "Comma-separated list of facilities",
                                        "type": "string",
                                        "example": "Wi-Fi,Air-Con,Laundry"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Contract Type created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContractTypeResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Creation failed"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/contract-types/{id}": {
            "get": {
                "tags": [
                    "Contract Types"
                ],
                "summary": "Get a single contract type",
                "description": "Returns the details of a specific contract type by its ID.",
                "operationId": "4007e3e2ec22d55048d713df0f3f62c1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the contract type",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContractTypeResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Contract type not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Contract Types"
                ],
                "summary": "Update an existing contract type",
                "description": "Updates the details of an existing contract type.",
                "operationId": "40004b046e8c727f91b1533f9c1ccd26",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the contract type to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "duration",
                                    "price",
                                    "facilities"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Premium 2-Year"
                                    },
                                    "duration": {
                                        "description": "Duration in months",
                                        "type": "integer",
                                        "example": 24
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 500
                                    },
                                    "facilities": {
                                        "description": "Comma-separated list of facilities",
                                        "type": "string",
                                        "example": "Wi-Fi,Air-Con,Laundry,Cleaning"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Contract Type updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContractTypeResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Contract Type not found"
                    },
                    "500": {
                        "description": "Update failed"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/customer-services": {
            "get": {
                "tags": [
                    "Customer Services"
                ],
                "summary": "Get a list of customer service requests",
                "description": "Returns a paginated list of all customer service requests.",
                "operationId": "ab9c129f994522de3e03afba9d5e4d66",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "CustomerServices retrieved successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/CustomerServiceResource"
                                                    }
                                                },
                                                "pagination": {
                                                    "properties": {
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 50
                                                        },
                                                        "per_page": {
                                                            "type": "integer",
                                                            "example": 15
                                                        },
                                                        "current_page": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "last_page": {
                                                            "type": "integer",
                                                            "example": 4
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Customer Services not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/customer-services/{id}": {
            "get": {
                "tags": [
                    "Customer Services"
                ],
                "summary": "Get a single customer service request",
                "description": "Returns the details of a specific customer service request by its ID.",
                "operationId": "2cd52d109acaaf71b93fa3db2445bcf3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the customer service request",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CustomerService found successful!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerServiceResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Customer service request not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Customer Services"
                ],
                "summary": "Update an existing customer service request",
                "description": "Updates the details of an existing customer service request.",
                "operationId": "8687d8f7386880f401a077d576a44e6c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the customer service request to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "roomId": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "9a7c6f2c-5b8a-4f2a-8f2c-6d8b3a0c1e9f"
                                    },
                                    "category": {
                                        "type": "string",
                                        "enum": [
                                            "Complain",
                                            "Maintenance",
                                            "Other"
                                        ],
                                        "example": "Maintenance"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Leaky faucet in the kitchen."
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "Pending",
                                            "Ongoing",
                                            "Resolved"
                                        ],
                                        "example": "Ongoing"
                                    },
                                    "priorityLevel": {
                                        "type": "string",
                                        "enum": [
                                            "Low",
                                            "Medium",
                                            "High"
                                        ],
                                        "example": "Medium"
                                    },
                                    "issuedDate": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-10-05"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Customer Service updated successfully!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerServiceResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Customer service request not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/invoices": {
            "get": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Get a list of invoices",
                "description": "Returns a paginated list of all invoices.",
                "operationId": "9944e4d0532fc102a8e44d9f86025314",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invoices retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/InvoiceResource"
                                                    }
                                                },
                                                "pagination": {
                                                    "properties": {
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 50
                                                        },
                                                        "per_page": {
                                                            "type": "integer",
                                                            "example": 15
                                                        },
                                                        "current_page": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "last_page": {
                                                            "type": "integer",
                                                            "example": 4
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invoices not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/invoices/{id}": {
            "get": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Get a single invoice",
                "description": "Returns the details of a specific invoice by its ID.",
                "operationId": "d02369d1b2059ace1cd3a9a67ffe2f30",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the invoice",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invoice retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvoiceResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invoice not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Update an existing invoice",
                "description": "Updates the status or bill ID of an existing invoice.",
                "operationId": "692a6ee6cd992b205108bf6461d07d02",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the invoice to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "billId": {
                                        "description": "ID of the associated bill",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "Pending",
                                            "Paid",
                                            "Overdue"
                                        ],
                                        "example": "Paid"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Invoice updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvoiceResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Invoice not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/occupants": {
            "get": {
                "tags": [
                    "Occupants"
                ],
                "summary": "Get a list of occupants",
                "description": "Returns a paginated list of all Occupants.",
                "operationId": "2aba4067f5960e4bf677d07facf8f6d7",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Occupants retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/OccupantResource"
                                                    }
                                                },
                                                "pagination": {
                                                    "properties": {
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 50
                                                        },
                                                        "per_page": {
                                                            "type": "integer",
                                                            "example": 15
                                                        },
                                                        "current_page": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "last_page": {
                                                            "type": "integer",
                                                            "example": 4
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Occupants not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/receipts": {
            "get": {
                "tags": [
                    "Receipts"
                ],
                "summary": "Get a list of receipts",
                "description": "Returns a paginated list of all receipts.",
                "operationId": "0f2c005998fc93e1a691d4ae544a5249",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Receipts retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/ReceiptResource"
                                                    }
                                                },
                                                "pagination": {
                                                    "properties": {
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 50
                                                        },
                                                        "per_page": {
                                                            "type": "integer",
                                                            "example": 15
                                                        },
                                                        "current_page": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "last_page": {
                                                            "type": "integer",
                                                            "example": 4
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Receipts not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/receipts/{id}": {
            "get": {
                "tags": [
                    "Receipts"
                ],
                "summary": "Get a single receipt",
                "description": "Returns the details of a specific receipt by its ID.",
                "operationId": "2b9a9737068d0cd349cbb26354dc593e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the receipt",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Receipt found successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReceiptResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The receipt you are looking for does not exist!"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Receipts"
                ],
                "summary": "Update an existing receipt",
                "description": "Updates the details of an existing receipt.",
                "operationId": "6834d9922f11feb02140a0acbfd9d997",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the receipt to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "invoiceId",
                                    "paymentMethod",
                                    "paidDate"
                                ],
                                "properties": {
                                    "invoiceId": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "9a7c6f2c-5b8a-4f2a-8f2c-6d8b3a0c1e9f"
                                    },
                                    "paymentMethod": {
                                        "type": "string",
                                        "enum": [
                                            "Cash",
                                            "Bank Transfer"
                                        ],
                                        "example": "Bank Transfer"
                                    },
                                    "paidDate": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-10-29"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Receipt updated successfully!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReceiptResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "The receipt you are looking for does not exist!"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/rooms": {
            "get": {
                "tags": [
                    "Rooms"
                ],
                "summary": "Get a list of rooms",
                "description": "Returns a paginated list of all rooms.",
                "operationId": "7f4754b7db3173fe97eae61d624a10f4",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Rooms retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/RoomResource"
                                                    }
                                                },
                                                "pagination": {
                                                    "properties": {
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 50
                                                        },
                                                        "per_page": {
                                                            "type": "integer",
                                                            "example": 15
                                                        },
                                                        "current_page": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "last_page": {
                                                            "type": "integer",
                                                            "example": 4
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Rooms not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/rooms/{id}": {
            "get": {
                "tags": [
                    "Rooms"
                ],
                "summary": "Get a single room",
                "description": "Returns the details of a specific room by its UUID.",
                "operationId": "5b14778d4ad1f8dd7d7b27f77cc6d099",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "UUID of the room",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Room retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoomResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Room not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Rooms"
                ],
                "summary": "Update an existing room",
                "description": "Updates the details of an existing room.",
                "operationId": "98cd7940d692e048c3bc38cd5654eaea",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "UUID of the room to update",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "roomNo",
                                    "floor",
                                    "dimension",
                                    "noOfBedRoom",
                                    "status",
                                    "sellingPrice",
                                    "maxNoOfPeople"
                                ],
                                "properties": {
                                    "roomNo": {
                                        "type": "integer",
                                        "example": 101
                                    },
                                    "floor": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "dimension": {
                                        "type": "string",
                                        "example": "12x12 sqft"
                                    },
                                    "noOfBedRoom": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "Available",
                                            "Rented",
                                            "Purchased",
                                            "In Maintenance"
                                        ],
                                        "example": "Available"
                                    },
                                    "sellingPrice": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 150000
                                    },
                                    "maxNoOfPeople": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "A cozy room with a nice view.",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Room updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoomResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Room not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/tenants": {
            "get": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Get a list of tenants",
                "description": "Returns a paginated list of all tenants.",
                "operationId": "b2d6a7dfd92597bb14a6b1dd29f59a5c",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Tenants retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/TenantResource"
                                                    }
                                                },
                                                "pagination": {
                                                    "properties": {
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 50
                                                        },
                                                        "per_page": {
                                                            "type": "integer",
                                                            "example": 15
                                                        },
                                                        "current_page": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "last_page": {
                                                            "type": "integer",
                                                            "example": 4
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tenants not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Create a new tenant",
                "description": "Creates a new tenant record.",
                "operationId": "f0081e7330ce16562f97fbe1fb6aefc5",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "roomId",
                                    "name",
                                    "nrc",
                                    "email",
                                    "phNumber",
                                    "emergencyNo"
                                ],
                                "properties": {
                                    "roomId": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "9a7c6f2c-5b8a-4f2a-8f2c-6d8b3a0c1e9f"
                                    },
                                    "name": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "John Doe",
                                            "Jane Doe"
                                        ]
                                    },
                                    "nrc": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "12/ABC(N)123456"
                                        ]
                                    },
                                    "email": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "email"
                                        },
                                        "example": [
                                            "john.doe@example.com"
                                        ]
                                    },
                                    "phNumber": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "09123456789"
                                        ]
                                    },
                                    "emergencyNo": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "09987654321"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Tenant created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TenantResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Tenant creation failed"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/tenants/{id}": {
            "get": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Get a single tenant",
                "description": "Returns the details of a specific tenant by their ID.",
                "operationId": "f9661d9d338c11947b7916880f02ceda",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the tenant",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tenant find successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TenantResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tenant did not find"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Update an existing tenant",
                "description": "Updates the details of an existing tenant.",
                "operationId": "a66b6a59d9cd46deabe8d200e6be09a0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the tenant to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "roomId",
                                    "name",
                                    "email",
                                    "phNumber",
                                    "emergencyNo"
                                ],
                                "properties": {
                                    "roomId": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "9a7c6f2c-5b8a-4f2a-8f2c-6d8b3a0c1e9f"
                                    },
                                    "name": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "Johnathan Doe"
                                        ]
                                    },
                                    "nrc": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "12/DEF(N)654321"
                                        ]
                                    },
                                    "email": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "email"
                                        },
                                        "example": [
                                            "johnathan.doe@example.com"
                                        ]
                                    },
                                    "phNumber": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "09112233445"
                                        ]
                                    },
                                    "emergencyNo": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "09556677889"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Tenant updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TenantResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Tenant not find"
                    },
                    "500": {
                        "description": "Tenant update failed"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/total-units": {
            "get": {
                "tags": [
                    "Total Units"
                ],
                "summary": "Get a list of total units",
                "description": "Returns a paginated list of all total units records.",
                "operationId": "0fc02caaca61877da087de709d010392",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Total units retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/TotalUnitResource"
                                                    }
                                                },
                                                "pagination": {
                                                    "properties": {
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 50
                                                        },
                                                        "per_page": {
                                                            "type": "integer",
                                                            "example": 15
                                                        },
                                                        "current_page": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "last_page": {
                                                            "type": "integer",
                                                            "example": 4
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No total units found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/total-units/{id}": {
            "get": {
                "tags": [
                    "Total Units"
                ],
                "summary": "Get a single total unit record",
                "description": "Returns the details of a specific total unit record by its ID.",
                "operationId": "ec6e8c2a612da8859c089a94facab37f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the total unit record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Total unit retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TotalUnitResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Total unit not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get a list of users",
                "description": "Returns a paginated list of all users.",
                "operationId": "f25fa8256cb99c9c2cd984aed2a58842",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Users retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/UserResource"
                                                    }
                                                },
                                                "pagination": {
                                                    "properties": {
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 50
                                                        },
                                                        "per_page": {
                                                            "type": "integer",
                                                            "example": 15
                                                        },
                                                        "current_page": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "last_page": {
                                                            "type": "integer",
                                                            "example": 4
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "description": "Creates a new user account.",
                "operationId": "0c60234ded0e376881d8ad441d20f181",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "userName",
                                    "email",
                                    "password",
                                    "role"
                                ],
                                "properties": {
                                    "userName": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "johndoe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "Password123"
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "Admin",
                                            "Tenant",
                                            "Staff"
                                        ],
                                        "example": "Tenant"
                                    },
                                    "tenantId": {
                                        "description": "Required if role is Tenant",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "User creation failed"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get a single user",
                "description": "Returns the details of a specific user by their ID.",
                "operationId": "0f942f960aa85553b53c3d4249f5fcad",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User Fetched Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update an existing user",
                "description": "Updates the details of an existing user.",
                "operationId": "5ed3331acdfd0414ea07dbd04d100988",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "userName",
                                    "email",
                                    "role",
                                    "isActive"
                                ],
                                "properties": {
                                    "userName": {
                                        "type": "string",
                                        "example": "Johnathan Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "johnathandoe@example.com"
                                    },
                                    "password": {
                                        "description": "Optional. Min 6 chars, 1 letter, 1 number",
                                        "type": "string",
                                        "format": "password",
                                        "example": "NewPass123"
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "Admin",
                                            "Tenant",
                                            "Staff"
                                        ],
                                        "example": "Staff"
                                    },
                                    "tenantId": {
                                        "type": "integer",
                                        "example": null
                                    },
                                    "isActive": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User Updated Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "ClientContractResource": {
                "title": "Client Contract Resource",
                "description": "Client-facing contract model representation",
                "properties": {
                    "id": {
                        "description": "Contract ID",
                        "type": "string",
                        "format": "uuid",
                        "example": "9a7c6f2c-5b8a-4f2a-8f2c-6d8b3a0c1e9f"
                    },
                    "room_id": {
                        "description": "Associated Room ID",
                        "type": "string",
                        "format": "uuid",
                        "example": "9a7c6f2c-5b8a-4f2a-8f2c-6d8b3a0c1e9f"
                    },
                    "expiry_date": {
                        "description": "Expiry date of the contract",
                        "type": "string",
                        "format": "date",
                        "example": "2025-10-27"
                    },
                    "tenant": {
                        "$ref": "#/components/schemas/TenantResource"
                    },
                    "contractType": {
                        "$ref": "#/components/schemas/ContractTypeResource"
                    }
                },
                "type": "object"
            },
            "ClientReceiptResource": {
                "title": "Client Receipt Resource",
                "description": "Client-facing receipt model representation",
                "properties": {
                    "id": {
                        "description": "Receipt ID",
                        "type": "integer",
                        "example": 1
                    },
                    "invoiceId": {
                        "description": "Associated Invoice ID",
                        "type": "integer",
                        "example": 101
                    },
                    "paymentMethod": {
                        "description": "Payment method used",
                        "type": "string",
                        "enum": [
                            "Cash",
                            "Bank Transfer",
                            "Credit Card"
                        ],
                        "example": "Credit Card"
                    },
                    "paidDate": {
                        "description": "Date of payment",
                        "type": "string",
                        "format": "date",
                        "example": "2023-10-28"
                    }
                },
                "type": "object"
            },
            "BillResource": {
                "title": "Bill Resource",
                "description": "Bill model representation",
                "properties": {
                    "id": {
                        "description": "Bill's unique identifier",
                        "type": "integer"
                    },
                    "roomId": {
                        "description": "Associated room's UUID",
                        "type": "string",
                        "format": "uuid"
                    },
                    "rentalFee": {
                        "description": "Monthly rental fee",
                        "type": "number",
                        "format": "float"
                    },
                    "electricityFee": {
                        "description": "Electricity consumption fee",
                        "type": "number",
                        "format": "float"
                    },
                    "waterFee": {
                        "description": "Water consumption fee",
                        "type": "number",
                        "format": "float"
                    },
                    "fineFee": {
                        "description": "Any applicable late fees or fines",
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "serviceFee": {
                        "description": "General service charges",
                        "type": "number",
                        "format": "float"
                    },
                    "groundFee": {
                        "description": "Ground maintenance fees",
                        "type": "number",
                        "format": "float"
                    },
                    "carParkingFee": {
                        "description": "Car parking charges",
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "wifiFee": {
                        "description": "Wi-Fi service charges",
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "totalAmount": {
                        "description": "The total bill amount",
                        "type": "number",
                        "format": "float"
                    },
                    "dueDate": {
                        "description": "Payment due date",
                        "type": "string",
                        "format": "date"
                    }
                },
                "type": "object"
            },
            "ContractResource": {
                "title": "Contract Resource",
                "description": "Contract model representation",
                "properties": {
                    "id": {
                        "description": "Contract ID",
                        "type": "integer",
                        "example": 1
                    },
                    "roomNo": {
                        "description": "ID of the associated room",
                        "type": "string",
                        "format": "uuid",
                        "example": "9a7c6f2c-5b8a-4f2a-8f2c-6d8b3a0c1e9f"
                    },
                    "contractId": {
                        "description": "ID of the contract type",
                        "type": "integer",
                        "example": 1
                    },
                    "tenantId": {
                        "description": "ID of the associated tenant",
                        "type": "integer",
                        "example": 1
                    },
                    "createdDate": {
                        "description": "The date the contract was created",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-10-27T10:00:00.000000Z"
                    },
                    "expiryDate": {
                        "description": "The date the contract expires",
                        "type": "string",
                        "format": "date",
                        "example": "2024-10-26"
                    },
                    "contractType": {
                        "$ref": "#/components/schemas/ContractTypeResource"
                    },
                    "tenant": {
                        "$ref": "#/components/schemas/TenantResource"
                    }
                },
                "type": "object"
            },
            "ContractTypeResource": {
                "title": "Contract Type Resource",
                "description": "Contract Type model representation",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Standard 1-Year"
                    },
                    "duration": {
                        "description": "Duration in months",
                        "type": "integer",
                        "example": 12
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": 500
                    },
                    "facilities": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "WiFi",
                            "Air Conditioning"
                        ]
                    }
                },
                "type": "object"
            },
            "CustomerServiceResource": {
                "title": "Customer Service Resource",
                "description": "Customer Service model representation",
                "properties": {
                    "id": {
                        "description": "Service request ID",
                        "type": "integer",
                        "example": 1
                    },
                    "roomId": {
                        "description": "ID of the associated room",
                        "type": "string",
                        "format": "uuid",
                        "example": "9a7c6f2c-5b8a-4f2a-8f2c-6d8b3a0c1e9f"
                    },
                    "category": {
                        "description": "Category of the service request",
                        "type": "string",
                        "example": "Maintenance"
                    },
                    "description": {
                        "description": "Detailed description of the issue",
                        "type": "string",
                        "example": "Leaky faucet in the kitchen."
                    },
                    "status": {
                        "description": "Current status of the request",
                        "type": "string",
                        "example": "Ongoing"
                    },
                    "priorityLevel": {
                        "description": "Priority level of the request",
                        "type": "string",
                        "example": "Medium"
                    },
                    "issuedDate": {
                        "description": "Date the request was issued",
                        "type": "string",
                        "format": "date",
                        "example": "2025-10-05"
                    }
                },
                "type": "object"
            },
            "InvoiceResource": {
                "title": "Invoice Resource",
                "description": "Invoice model representation",
                "properties": {
                    "id": {
                        "description": "Invoice ID",
                        "type": "integer",
                        "example": 1
                    },
                    "billId": {
                        "description": "ID of the associated bill",
                        "type": "integer",
                        "example": 1
                    },
                    "status": {
                        "description": "Status of the invoice",
                        "type": "string",
                        "example": "Paid"
                    },
                    "createdAt": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-10-28T12:00:00.000000Z"
                    },
                    "updatedAt": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-10-28T12:00:00.000000Z"
                    },
                    "bill": {
                        "description": "Associated bill information",
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "room_id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "9a7c6f2c-5b8a-4f2a-8f2c-6d8b3a0c1e9f"
                            },
                            "user_id": {
                                "type": "integer",
                                "example": 1
                            },
                            "rental_fee": {
                                "type": "number",
                                "format": "float",
                                "example": 500
                            },
                            "electricity_fee": {
                                "type": "number",
                                "format": "float",
                                "example": 50
                            },
                            "water_fee": {
                                "type": "number",
                                "format": "float",
                                "example": 25
                            },
                            "fine_fee": {
                                "type": "number",
                                "format": "float",
                                "example": 0
                            },
                            "service_fee": {
                                "type": "number",
                                "format": "float",
                                "example": 10
                            },
                            "ground_fee": {
                                "type": "number",
                                "format": "float",
                                "example": 5
                            },
                            "car_parking_fee": {
                                "type": "number",
                                "format": "float",
                                "example": 15
                            },
                            "wifi_fee": {
                                "type": "number",
                                "format": "float",
                                "example": 20
                            },
                            "total_amount": {
                                "type": "number",
                                "format": "float",
                                "example": 625
                            },
                            "due_date": {
                                "type": "string",
                                "format": "date",
                                "example": "2023-11-28"
                            },
                            "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2023-10-28T12:00:00.000000Z"
                            },
                            "updatedAt": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2023-10-28T12:00:00.000000Z"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "OccupantResource": {
                "title": "Occupant Resource",
                "description": "Occupant model representation",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "nrc": {
                        "type": "string",
                        "example": "12/ABC(N)123456"
                    },
                    "relationshipToTenant": {
                        "type": "string",
                        "example": "Child"
                    },
                    "tenantId": {
                        "type": "integer",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "ReceiptResource": {
                "title": "Receipt Resource",
                "description": "Receipt model representation",
                "properties": {
                    "id": {
                        "description": "Receipt ID",
                        "type": "integer",
                        "example": 1
                    },
                    "invoiceId": {
                        "description": "ID of the associated invoice",
                        "type": "string",
                        "format": "uuid",
                        "example": "9a7c6f2c-5b8a-4f2a-8f2c-6d8b3a0c1e9f"
                    },
                    "paymentMethod": {
                        "description": "Method of payment",
                        "type": "string",
                        "example": "Cash"
                    },
                    "paidDate": {
                        "description": "The date the receipt was paid",
                        "type": "string",
                        "format": "date",
                        "example": "2023-10-28"
                    }
                },
                "type": "object"
            },
            "RoomResource": {
                "title": "Room Resource",
                "description": "Room model representation",
                "properties": {
                    "id": {
                        "description": "Room's unique identifier",
                        "type": "string",
                        "format": "uuid"
                    },
                    "roomNo": {
                        "description": "Room number",
                        "type": "integer",
                        "example": 101
                    },
                    "floor": {
                        "description": "Floor number",
                        "type": "integer",
                        "example": 1
                    },
                    "dimension": {
                        "description": "Room dimensions",
                        "type": "string",
                        "example": "12x12 sqft"
                    },
                    "noOfBedRoom": {
                        "description": "Number of bedrooms",
                        "type": "integer",
                        "example": 1
                    },
                    "status": {
                        "description": "Current status of the room",
                        "type": "string",
                        "enum": [
                            "Available",
                            "Rented",
                            "Purchased",
                            "In Maintenance"
                        ],
                        "example": "Available"
                    },
                    "sellingPrice": {
                        "description": "Selling price of the room",
                        "type": "number",
                        "format": "float",
                        "example": 150000
                    },
                    "maxNoOfPeople": {
                        "description": "Maximum number of occupants",
                        "type": "integer",
                        "example": 2
                    },
                    "description": {
                        "description": "A brief description of the room",
                        "type": "string",
                        "example": "A cozy room with a nice view.",
                        "nullable": true
                    },
                    "createdAt": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "TenantResource": {
                "title": "Tenant Resource",
                "description": "Tenant model representation",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "roomId": {
                        "type": "string",
                        "format": "uuid",
                        "example": "9a7c6f2c-5b8a-4f2a-8f2c-6d8b3a0c1e9f"
                    },
                    "name": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "John Doe",
                            "Jane Doe"
                        ]
                    },
                    "nrc": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "12/ABC(N)123456",
                            "12/DEF(N)654321"
                        ]
                    },
                    "email": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "email"
                        },
                        "example": [
                            "john.doe@example.com",
                            "jane.doe@example.com"
                        ]
                    },
                    "phNumber": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "09123456789",
                            "09987654321"
                        ]
                    },
                    "emergencyNo": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "09111222333",
                            "09444555666"
                        ]
                    },
                    "occupants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OccupantResource"
                        }
                    }
                },
                "type": "object"
            },
            "TotalUnitResource": {
                "title": "Total Unit Resource",
                "description": "Total unit model representation",
                "properties": {
                    "id": {
                        "description": "Record ID",
                        "type": "integer",
                        "example": 1
                    },
                    "billId": {
                        "description": "ID of the associated bill",
                        "type": "integer",
                        "example": 1
                    },
                    "electricityUnits": {
                        "description": "Total electricity units consumed",
                        "type": "integer",
                        "example": 150
                    },
                    "waterUnits": {
                        "description": "Total water units consumed",
                        "type": "integer",
                        "example": 50
                    },
                    "tenantName": {
                        "description": "Tenant name",
                        "type": "string",
                        "example": "Aung Aung"
                    },
                    "roomNo": {
                        "description": "Room number",
                        "type": "string",
                        "example": "101"
                    }
                },
                "type": "object"
            },
            "UserResource": {
                "title": "User Resource",
                "description": "User model representation",
                "properties": {
                    "id": {
                        "description": "User ID",
                        "type": "integer",
                        "example": 1
                    },
                    "userName": {
                        "description": "Name of the user",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "description": "Email of the user",
                        "type": "string",
                        "format": "email",
                        "example": "johndoe@example.com"
                    },
                    "role": {
                        "description": "Role of the user",
                        "type": "string",
                        "example": "Tenant"
                    },
                    "isActive": {
                        "description": "User's active status",
                        "type": "boolean",
                        "example": true
                    },
                    "tenantId": {
                        "description": "ID of the associated tenant",
                        "type": "integer",
                        "example": 1
                    },
                    "tenant": {
                        "$ref": "#/components/schemas/TenantResource"
                    },
                    "createdAt": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-10-28T12:00:00.000000Z"
                    },
                    "updatedAt": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-10-28T12:00:00.000000Z"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Client Bills",
            "description": "Endpoints for tenants to view their billing information"
        },
        {
            "name": "Client Contracts",
            "description": "Endpoints for tenants to view their contract information"
        },
        {
            "name": "Client Customer Service",
            "description": "Endpoints for tenants to manage their customer service requests"
        },
        {
            "name": "Client Invoices",
            "description": "Endpoints for tenants to view their invoice information"
        },
        {
            "name": "Client Receipts",
            "description": "Endpoints for tenants to view their receipt information"
        },
        {
            "name": "Bills",
            "description": "API Endpoints for managing bills"
        },
        {
            "name": "Contracts",
            "description": "API Endpoints for managing contracts"
        },
        {
            "name": "Contract Types",
            "description": "API Endpoints for managing contract types"
        },
        {
            "name": "Customer Services",
            "description": "API Endpoints for managing customer service requests"
        },
        {
            "name": "Invoices",
            "description": "API Endpoints for managing invoices"
        },
        {
            "name": "Receipts",
            "description": "API Endpoints for managing receipts"
        },
        {
            "name": "Rooms",
            "description": "API Endpoints for managing rooms"
        },
        {
            "name": "Tenants",
            "description": "API Endpoints for managing tenants"
        },
        {
            "name": "Total Units",
            "description": "API Endpoints for managing total utility units"
        },
        {
            "name": "Users",
            "description": "API Endpoints for managing users"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Occupants",
            "description": "Occupants"
        }
    ]
}